//*    implementation done
//     pub const Net = ?*anyopaque;
//     pub const Layer = ?*anyopaque;
//     pub extern fn Net_ReadNet(model: [*c]const u8, config: [*c]const u8) Net;
//     pub extern fn Net_ReadNetBytes(framework: [*c]const u8, model: struct_ByteArray, config: struct_ByteArray) Net;
//     pub extern fn Net_ReadNetFromCaffe(prototxt: [*c]const u8, caffeModel: [*c]const u8) Net;
//     pub extern fn Net_ReadNetFromCaffeBytes(prototxt: struct_ByteArray, caffeModel: struct_ByteArray) Net;
//     pub extern fn Net_ReadNetFromTensorflow(model: [*c]const u8) Net;
//     pub extern fn Net_ReadNetFromTensorflowBytes(model: struct_ByteArray) Net;
//     pub extern fn Net_ReadNetFromTorch(model: [*c]const u8) Net;
//     pub extern fn Net_ReadNetFromONNX(model: [*c]const u8) Net;
//     pub extern fn Net_ReadNetFromONNXBytes(model: struct_ByteArray) Net;
//     pub extern fn Net_BlobFromImage(image: Mat, scalefactor: f64, size: Size, mean: Scalar, swapRB: bool, crop: bool) Mat;
//     pub extern fn Net_BlobFromImages(images: struct_Mats, blob: Mat, scalefactor: f64, size: Size, mean: Scalar, swapRB: bool, crop: bool, ddepth: c_int) void;
//     pub extern fn Net_ImagesFromBlob(blob_: Mat, images_: [*c]struct_Mats) void;
//     pub extern fn Net_Close(net: Net) void;
//     pub extern fn Net_Empty(net: Net) bool;
//     pub extern fn Net_SetInput(net: Net, blob: Mat, name: [*c]const u8) void;
//     pub extern fn Net_Forward(net: Net, outputName: [*c]const u8) Mat;
//     pub extern fn Net_ForwardLayers(net: Net, outputBlobs: [*c]struct_Mats, outBlobNames: struct_CStrings) void;
//     pub extern fn Net_SetPreferableBackend(net: Net, backend: c_int) void;
//     pub extern fn Net_SetPreferableTarget(net: Net, target: c_int) void;
//     pub extern fn Net_GetPerfProfile(net: Net) i64;
//     pub extern fn Net_GetUnconnectedOutLayers(net: Net, res: [*c]IntVector) void;
//     pub extern fn Net_GetLayerNames(net: Net, names: [*c]CStrings) void;
//     pub extern fn Net_GetBlobChannel(blob: Mat, imgidx: c_int, chnidx: c_int) Mat;
//     pub extern fn Net_GetBlobSize(blob: Mat) Scalar;
//     pub extern fn Net_GetLayer(net: Net, layerid: c_int) Layer;
//     pub extern fn Layer_Close(layer: Layer) void;
//     pub extern fn Layer_InputNameToIndex(layer: Layer, name: [*c]const u8) c_int;
//     pub extern fn Layer_OutputNameToIndex(layer: Layer, name: [*c]const u8) c_int;
//     pub extern fn Layer_GetName(layer: Layer) [*c]const u8;
//     pub extern fn Layer_GetType(layer: Layer) [*c]const u8;
//     pub extern fn NMSBoxes(bboxes: struct_Rects, scores: FloatVector, score_threshold: f32, nms_threshold: f32, indices: [*c]IntVector) void;
//     pub extern fn NMSBoxesWithParams(bboxes: struct_Rects, scores: FloatVector, score_threshold: f32, nms_threshold: f32, indices: [*c]IntVector, eta: f32, top_k: c_int) void;
